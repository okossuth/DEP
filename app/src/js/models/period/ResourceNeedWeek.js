// Generated by CoffeeScript 1.6.2
define(['_common/ToolsBase', 'models/resources/ResourceBase', 'views/period/ResourceNeedWeek', 'ovivo'], function(ToolsBase, ResourceBase, View) {
  return ResourceBase.extend({
    _gettersNames: ['resourceNeed', ['pk', 'resourceNeed'], ['start_time', 'resourceNeed'], ['end_time', 'resourceNeed']],
    createGetters: (function() {
      var _foreignGetter, _nativeGetter;

      _nativeGetter = function(_name) {
        return function() {
          return this.get(_name);
        };
      };
      _foreignGetter = function(_arr) {
        return function() {
          return this.get(_arr[1])[_arr[0]]();
        };
      };
      return ToolsBase.once('createGetters', function() {
        var _this = this;

        return _.each(this._gettersNames, function(arr) {
          var _getter, _name;

          _getter = (typeof arr === 'string' ? _nativeGetter : _foreignGetter)(arr);
          _name = typeof arr === 'string' ? arr : arr[0];
          if (_this.constructor.prototype[_name] == null) {
            return _this.constructor.prototype[_name] = _getter;
          }
        });
      });
    })(),
    addBlock: function(block) {
      this.view.addBlock(block);
      return this._blocksCounter += 1;
    },
    removeBlock: function(block) {
      this._blocksCounter -= 1;
      if (this._blocksCounter === 0) {
        return this.collection.remove(this);
      }
    },
    initialize: function(attrs, options) {
      this.View = View;
      this._blocksCounter = 0;
      this.proxyCall('initialize', arguments);
      return true;
    }
  });
});
