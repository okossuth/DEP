// Generated by CoffeeScript 1.6.2
define(['models/period/Frame', 'ovivo'], function(Model) {
  return Backbone.Collection.extend({
    model: Model,
    doNotFetch: true,
    addFrame: function(start, end, options) {
      var _model;

      _model = new Model({
        start: start,
        end: end,
        mode: this.displayMode
      }, options);
      this.add(_model);
      return _model;
    },
    processFrameAdd: function(frame) {
      return ovivo.desktop.resources.periods.def.done(function() {
        return ovivo.desktop.resources.periods.each(function(period) {
          return frame.addPeriod(period);
        });
      });
    },
    processPeriodAdd: function(period) {
      return this.each(function(frame) {
        return frame.addPeriod(period);
      });
    },
    processPeriodRemove: function(period) {
      return this.each(function(frame) {
        return frame.removePeriod(period);
      });
    },
    processPeriodChange: function(period) {
      return this.each(function(frame) {
        return frame.changePeriod(period);
      });
    },
    processEventAdd: function(event) {
      if (event.skill() == null) {
        return;
      }
      return this.each(function(frame) {
        return frame.addEvent(event);
      });
    },
    processEventRemove: function(event) {
      if (event.periodBlock == null) {
        return;
      }
      return event.periodBlock.removeEvent(event);
    },
    processEventChange: function(event) {
      if (event.periodBlock != null) {
        return;
      }
      return this.processEventAdd(event);
    },
    processEventAddEmployees: function(event) {
      if (event.skill() == null) {
        return;
      }
      return this.each(function(frame) {
        return frame.addEventEmployees(event);
      });
    },
    processEventRemoveEmployees: function(event) {
      return this.each(function(frame) {
        return frame.removeEventEmployees(event);
      });
    },
    processEventChangeEmployees: function(event) {
      return this.each(function(frame) {
        frame.removeEventEmployees(event);
        return frame.addEventEmployees(event);
      });
    },
    changeDisplayMode: function(value) {
      this.displayMode = value;
      return this.each(function(model) {
        return model.set('mode', value);
      });
    },
    initialize: function() {
      var _this = this;

      this.on('add', this.processFrameAdd, this);
      ovivo.desktop.resources.periods.def.done(function() {
        ovivo.desktop.resources.periods.on('add', _this.processPeriodAdd, _this);
        ovivo.desktop.resources.periods.on('remove', _this.processPeriodRemove, _this);
        ovivo.desktop.resources.periods.on('updateFrames', _this.processPeriodChange, _this);
        return ovivo.desktop.resources.events.def.done(function() {
          ovivo.desktop.resources.events.on('add', _this.processEventAdd, _this);
          ovivo.desktop.resources.events.on('remove', _this.processEventRemove, _this);
          ovivo.desktop.resources.events.on('change', _this.processEventChange, _this);
          ovivo.desktop.resources.events.on('add', _this.processEventAddEmployees, _this);
          ovivo.desktop.resources.events.on('remove', _this.processEventAddEmployees, _this);
          return ovivo.desktop.resources.events.on('change', _this.processEventAddEmployees, _this);
        });
      });
      return true;
    }
  });
});
