// Generated by CoffeeScript 1.6.2
define(['ovivo'], function() {
  var _Popup, _counter;

  _counter = 0;
  _Popup = Backbone.View.extend({
    events: {
      'click .close': 'close'
    },
    close: function() {
      return this.hide();
    },
    show: function() {
      this.$el.show();
      return $('.popup-overlay').show();
    },
    hide: function() {
      this.$el.hide();
      return $('.popup-overlay').hide();
    },
    _attachHandlers: (function() {
      var _animationEnd;

      _animationEnd = function($el) {
        var _handler;

        _handler = function() {
          return $el.off(ovivo.config.ANIMATION_END, _handler);
        };
        return _handler;
      };
      return function($el) {
        return $el.on(ovivo.config.ANIMATION_END, _animationEnd($el));
      };
    })(),
    _attachHandler: function(handler) {
      return this.$el.on(ovivo.config.ANIMATION_END, this._wrapHanlder(handler, this.$el));
    },
    _wrapHanlder: function(handler) {
      var _argsOutter, _handler;

      _argsOutter = Array.prototype.slice.call(arguments, 1);
      return _handler = function() {
        var _args;

        _args = Array.prototype.slice.call(arguments, 0);
        return handler.apply(this, [_handler].concat(_argsOutter).concat(_args));
      };
    },
    _handlerEnterEnd: function(handler, $el, e) {
      _counter -= 1;
      $el.removeClass('enter');
      $('.popup-overlay').show();
      return $el.off(ovivo.config.ANIMATION_END, handler);
    },
    _handlerExitEnd: function(handler, $el, e) {
      var _overlayFlag;

      $el.removeClass('exit');
      $el.hide();
      if (_counter === 0) {
        $('.popup-overlay').hide();
      }
      _overlayFlag = true;
      return $el.off(ovivo.config.ANIMATION_END, handler);
    },
    _animationShow: function() {
      _counter += 1;
      this.$el.show();
      this._attachHandler(this._handlerEnterEnd);
      this.$el.addClass('enter');
      return $('.popup-overlay').show();
    },
    _animationHide: function() {
      this._attachHandler(this._handlerExitEnd);
      return this.$el.addClass('exit');
    },
    _initialize: function() {
      return true;
    }
  });
  if (Modernizr.cssanimations === true) {
    _Popup.prototype.show = _Popup.prototype._animationShow;
    _Popup.prototype.hide = _Popup.prototype._animationHide;
  }
  return _Popup;
});
